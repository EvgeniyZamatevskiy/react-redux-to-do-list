{"version":3,"file":"static/js/Login.2ef79bc2.chunk.js","mappings":"kVACA,EAA+B,4B,mBCiBlBA,EAAY,WAExB,IAAMC,GAAWC,EAAAA,EAAAA,KAEXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAErBC,GAASC,EAAAA,EAAAA,IAAU,CAExBC,cAAe,CAAEC,MAAOC,EAAAA,EAAcC,SAAUD,EAAAA,EAAcE,YAAY,GAC1EC,SAAU,SAAAC,GACT,IAAMC,EAA0B,CAAC,EAcjC,OAbKD,EAAOL,QACXM,EAAON,MAAQ,sBAEX,4CAA4CO,KAAKF,EAAOL,SAC5DM,EAAON,MAAQ,yBAEXK,EAAOH,WACXI,EAAOJ,SAAW,yBAEfG,EAAOH,SAASM,OAAS,IAC5BF,EAAOJ,SAAW,4CAGZI,CACP,EACDG,SAAU,SAAAJ,GACTb,GAASkB,EAAAA,EAAAA,IAAML,GACf,IAGF,OAAIX,GACI,SAAC,KAAD,CAAUiB,GAAIC,EAAAA,EAAAA,QAIrB,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAgB,SAAhC,UACC,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACD,eAAgB,SAA3B,UACC,UAACE,EAAA,EAAD,YACC,UAACC,EAAA,EAAD,YACC,6FACC,cAAGC,KAAM,wCAAyCC,OAAQ,SAA1D,sBAED,oEACA,sDACA,8CAED,iBAAMX,SAAUZ,EAAOwB,aAAvB,UACC,UAACC,EAAA,EAAD,YACC,SAACC,EAAA,GAAD,QACCC,MAAM,QACNC,OAAO,UACH5B,EAAO6B,cAAc,WAEzB7B,EAAO8B,QAAQ3B,OAASH,EAAOS,OAAON,QACtC,gBAAK4B,UAAWC,EAAhB,SAAqChC,EAAOS,OAAON,SACpD,SAACuB,EAAA,GAAD,QACCO,KAAK,WACLN,MAAM,WACNC,OAAO,UACH5B,EAAO6B,cAAc,cAEzB7B,EAAO8B,QAAQzB,UAAYL,EAAOS,OAAOJ,WACzC,gBAAK0B,UAAWC,EAAhB,SAAqChC,EAAOS,OAAOJ,YACpD,SAAC6B,EAAA,EAAD,CACCP,MAAO,cACPQ,SAAS,SAACC,EAAA,GAAD,UACJpC,EAAO6B,cAAc,mBAE3B,SAACQ,EAAA,EAAD,CAAQJ,KAAM,SAAUK,QAAS,YAAaC,MAAO,UAArD,8BASN,C","sources":["webpack://react-to-do-list/./src/pages/login/Login.module.css?c066","pages/login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"Login_errorMessage__10FKx\"};","import React, { FC, ReactElement } from 'react'\r\nimport { Grid, Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel, TextField, Button } from '@mui/material'\r\nimport { useFormik } from 'formik'\r\nimport { useAppDispatch } from 'store/hooks'\r\nimport { login } from 'store/asyncActions/auth'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectIsAuth } from 'store/selectors/auth'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { Path } from 'enums/Path'\r\nimport style from './Login.module.css'\r\nimport { EMPTY_STRING } from 'constants/base'\r\n\r\ntype FormikErrorType = {\r\n\temail?: string\r\n\tpassword?: string\r\n\trememberMe?: boolean\r\n}\r\n\r\nexport const Login: FC = (): ReactElement => {\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst isAuth = useSelector(selectIsAuth)\r\n\r\n\tconst formik = useFormik({\r\n\r\n\t\tinitialValues: { email: EMPTY_STRING, password: EMPTY_STRING, rememberMe: false },\r\n\t\tvalidate: values => {\r\n\t\t\tconst errors: FormikErrorType = {}\r\n\t\t\tif (!values.email) {\r\n\t\t\t\terrors.email = 'Email is required!'\r\n\t\t\t}\r\n\t\t\tif (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\t\terrors.email = 'Invalid email address'\r\n\t\t\t}\r\n\t\t\tif (!values.password) {\r\n\t\t\t\terrors.password = 'Password is required!'\r\n\t\t\t}\r\n\t\t\tif (values.password.length < 3) {\r\n\t\t\t\terrors.password = 'Password must be more than 3 characters!'\r\n\t\t\t}\r\n\r\n\t\t\treturn errors\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tdispatch(login(values))\r\n\t\t},\r\n\t})\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Navigate to={Path.HOME} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container justifyContent={'center'}>\r\n\t\t\t<Grid item justifyContent={'center'}>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<FormLabel>\r\n\t\t\t\t\t\t<p>To log in get registereddddddddddddddddddddddddddddddddddddddddd\r\n\t\t\t\t\t\t\t<a href={'https://social-network.samuraijs.com/'} target={'_blank'}>here</a>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>or use common test account credentials:</p>\r\n\t\t\t\t\t\t<p>Email: free@samuraijs.com</p>\r\n\t\t\t\t\t\t<p>Password: free</p>\r\n\t\t\t\t\t</FormLabel>\r\n\t\t\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tlabel='Email'\r\n\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{formik.touched.email && formik.errors.email &&\r\n\t\t\t\t\t\t\t\t<div className={style.errorMessage}>{formik.errors.email}</div>}\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tlabel='Password'\r\n\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\t{...formik.getFieldProps('password')}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{formik.touched.password && formik.errors.password &&\r\n\t\t\t\t\t\t\t\t<div className={style.errorMessage}>{formik.errors.password}</div>}\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tlabel={'Remember me'}\r\n\t\t\t\t\t\t\t\tcontrol={<Checkbox\r\n\t\t\t\t\t\t\t\t\t{...formik.getFieldProps('rememberMe')}\r\n\t\t\t\t\t\t\t\t/>} />\r\n\t\t\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>\r\n\t\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t)\r\n}\r\n"],"names":["Login","dispatch","useAppDispatch","isAuth","useSelector","selectIsAuth","formik","useFormik","initialValues","email","EMPTY_STRING","password","rememberMe","validate","values","errors","test","length","onSubmit","login","to","Path","Grid","container","justifyContent","item","FormControl","FormLabel","href","target","handleSubmit","FormGroup","TextField","label","margin","getFieldProps","touched","className","style","type","FormControlLabel","control","Checkbox","Button","variant","color"],"sourceRoot":""}